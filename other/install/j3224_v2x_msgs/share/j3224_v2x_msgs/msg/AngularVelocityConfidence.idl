// generated from rosidl_adapter/resource/msg.idl.em
// with input from j3224_v2x_msgs/msg/AngularVelocityConfidence.msg
// generated code does not contain a copyright notice

#include "j3224_v2x_msgs/msg/PitchRateConfidence.idl"
#include "j3224_v2x_msgs/msg/RollRateConfidence.idl"

module j3224_v2x_msgs {
  module msg {
    module AngularVelocityConfidence_Constants {
      const uint8 HAS_PITCH_RATE_CONFIDENCE = 1;
      const uint8 HAS_ROLL_RATE_CONFIDENCE = 2;
    };
    @verbatim (language="comment", text=
      " AngularVelocityConfidence.msg" "\n"
      "" "\n"
      " J3224 2020 message format.")
    struct AngularVelocityConfidence {
      @verbatim (language="comment", text=
        " AngularVelocityConfidence ::= SEQUENCE {" "\n"
        "   pitchRateConfidence PitchRateConfidenceOPTIONAL," "\n"
        "   rollRateConfidence RollRateConfidence OPTIONAL" "\n"
        " }" "\n"
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_PITCH_RATE_CONFIDENCE) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_PITCH_RATE_CONFIDENCE")
      uint8 presence_vector;

      j3224_v2x_msgs::msg::PitchRateConfidence pitch_rate_confidence;

      j3224_v2x_msgs::msg::RollRateConfidence roll_rate_confidence;
    };
  };
};
