// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/SegmentAttributeXY.msg
// generated code does not contain a copyright notice


module j2735_v2x_msgs {
  module msg {
    module SegmentAttributeXY_Constants {
      const uint8 RESERVED = 0;
      const uint8 DONOTBLOCK = 1;
      const uint8 WHITELINE = 2;
      const uint8 MERGINGLANELEFT = 3;
      const uint8 MERGINGLANERIGHT = 4;
      const uint8 CURBONLEFT = 5;
      const uint8 CURBONRIGHT = 6;
      const uint8 LOADINGZONEONLEFT = 7;
      const uint8 LOADINGZONEONRIGHT = 8;
      const uint8 TURNOUTPOINTONLEFT = 9;
      const uint8 TURNOUTPOINTONRIGHT = 10;
      const uint8 ADJACENTPARKINGONLEFT = 11;
      const uint8 ADJACENTPARKINGONRIGHT = 12;
      const uint8 ADJACENTBIKELANEONLEFT = 13;
      const uint8 ADJACENTBIKELANEONRIGHT = 14;
      const uint8 SHAREDBIKELANE = 15;
      const uint8 BIKEBOXINFRONT = 16;
      const uint8 TRANSITSTOPONLEFT = 17;
      const uint8 TRANSITSTOPONRIGHT = 18;
      const uint8 TRANSITSTOPINLANE = 19;
      const uint8 SHAREDWITHTRACKEDVEHICLE = 20;
      const uint8 SAFEISLAND = 21;
      const uint8 LOWCURBSPRESENT = 22;
      const uint8 RUMBLESTRIPPRESENT = 23;
      const uint8 AUDIBLESIGNALINGPRESENT = 24;
      const uint8 ADAPTIVETIMINGPRESENT = 25;
      const uint8 RFSIGNALREQUESTPRESENT = 26;
      const uint8 PARTIALCURBINTRUSION = 27;
      const uint8 TAPERTOLEFT = 28;
      const uint8 TAPERTORIGHT = 29;
      const uint8 TAPERTOCENTERLINE = 30;
      const uint8 PARALLELPARKING = 31;
      const uint8 FREEPARKING = 32;
      const uint8 TIMERESTRICTIONSONPARKING = 33;
      const uint8 COSTTOPARK = 34;
      const uint8 MIDBLOCKCURBPRESENT = 35;
      const uint8 UNEVENPAVEMENTPRESENT = 36;
    };
    @verbatim (language="comment", text=
      " SegmentAttributeXY.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @author Mae Fromm" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " The DE_SegmentAttributeXY data element is an enumerated list of attributes about the current lane segment which" "\n"
      " may be enabled or disabled to indicate the presence or absence of the selected attribute on the segment." "\n"
      "" "\n"
      " SegmentAttributeXY ::= ENUMERATED {" "\n"
      " -- Various values which can be Enabled and Disabled for a lane segment" "\n"
      "" "\n"
      " -- General Items" "\n"
      " reserved ," "\n"
      " doNotBlock ,  -- segment where a vehicle" "\n"
      "      -- may not come to a stop" "\n"
      " whiteLine ,  -- segment where lane crossing not allowed" "\n"
      "      -- such as the final few meters of a lane" "\n"
      "" "\n"
      " -- Porous Lane states, merging, turn outs, parking etc." "\n"
      " mergingLaneLeft,   -- indicates porous lanes" "\n"
      " mergingLaneRight," "\n"
      " curbOnLeft,    -- indicates presence of curbs" "\n"
      " curbOnRight," "\n"
      " loadingzoneOnLeft, -- loading or drop off zones" "\n"
      " loadingzoneOnRight," "\n"
      " turnOutPointOnLeft, -- opening to adjacent street/alley/road" "\n"
      " turnOutPointOnRight," "\n"
      " adjacentParkingOnLeft,  -- side of road parking" "\n"
      " adjacentParkingOnRight," "\n"
      "" "\n"
      " -- Bike Lane Needs" "\n"
      " adjacentBikeLaneOnLeft, -- presence of marked bike lanes" "\n"
      " adjacentBikeLaneOnRight," "\n"
      " sharedBikeLane,  -- right of way is shared with bikes" "\n"
      "    -- who may occupy entire lane width" "\n"
      " bikeBoxInFront," "\n"
      "" "\n"
      " -- Transit Needs" "\n"
      " transitStopOnLeft, -- any form of bus/transit loading" "\n"
      "    -- with pull in-out access to lane on left" "\n"
      " transitStopOnRight,  -- any form of bus/transit loading" "\n"
      "    -- with pull in-out access to lane on right" "\n"
      " transitStopInLane,  -- any form of bus/transit loading" "\n"
      "    -- in mid path of the lane" "\n"
      " sharedWithTrackedVehicle, -- lane is shared with train or trolley" "\n"
      "    -- not used for crossing tracks" "\n"
      "" "\n"
      " -- Pedestrian Support Attributes" "\n"
      " safeIsland,   -- begin/end a safety island in path" "\n"
      " lowCurbsPresent,  -- for ADA support" "\n"
      " rumbleStripPresent,  -- for ADA support" "\n"
      " audibleSignalingPresent, -- for ADA support" "\n"
      " adaptiveTimingPresent,  -- for ADA support" "\n"
      " rfSignalRequestPresent, -- Supports RF push to walk technologies" "\n"
      " partialCurbIntrusion,  -- path is blocked by a median or curb" "\n"
      "    -- but at least 1 meter remains open for use" "\n"
      "    -- and at-grade passage" "\n"
      "" "\n"
      " -- Lane geometry details" "\n"
      " taperToLeft,  -- Used to control final path shape" "\n"
      " taperToRight,  -- Used to control final path shape" "\n"
      " taperToCenterLine, -- Used to control final path shape" "\n"
      "" "\n"
      " -- Parking Lane and Curb Attributes" "\n"
      " parallelParking,  -- Parking at an angle with the street" "\n"
      " freeParking,   -- no restriction on use of parking" "\n"
      " timeRestrictionsOnParking , -- Parking is not permitted at all times" "\n"
      "    -- typically used when the 'parking' lane" "\n"
      "    -- becomes a driving lane at times" "\n"
      " costToPark,   -- Used where parking has a cost" "\n"
      " midBlockCurbPresent,  -- a protruding curb near lane edge" "\n"
      " unEvenPavementPresent,  -- a disjoint height at lane edge" "\n"
      " ..." "\n"
      " }")
    struct SegmentAttributeXY {
      uint8 segment_attribute_xy;
    };
  };
};
