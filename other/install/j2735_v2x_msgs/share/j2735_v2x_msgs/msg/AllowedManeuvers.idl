// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/AllowedManeuvers.msg
// generated code does not contain a copyright notice


module j2735_v2x_msgs {
  module msg {
    module AllowedManeuvers_Constants {
      const uint16 STRAIGHT = 1;
      const uint16 LEFT_TURN = 2;
      const uint16 RIGHT_TURN = 4;
      const uint16 U_TURN = 8;
      const uint16 LEFT_TURN_ON_RED = 16;
      const uint16 RIGHT_TURN_ON_RED = 32;
      const uint16 LANE_CHANGE = 64;
      const uint16 NO_STOPPING_ALLOWED = 128;
      const uint16 ALWAYS_YIELD = 256;
      const uint16 GO_WITH_HALT = 512;
      const uint16 CAUTION = 1024;
    };
    @verbatim (language="comment", text=
      " AllowedManeuvers.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @author Mae Fromm" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " AllowedManeuvers ::= BIT STRING {" "\n"
      " -- With bits as defined:" "\n"
      " -- Allowed maneuvers at path end (stop line)" "\n"
      " -- All maneuvers with bits not set are therefore prohibited !" "\n"
      " -- A value of zero shall be used for unknown, indicating no Maneuver" "\n"
      " maneuverStraightAllowed(0)," "\n"
      " -- a Straight movement is allowed in this lane" "\n"
      " maneuverLeftAllowed(1)," "\n"
      " -- a Left Turn movement is allowed in this lane" "\n"
      " maneuverRightAllowed(2)," "\n"
      " -- a Right Turn movement is allowed in this lane" "\n"
      " maneuverUTurnAllowed(3)," "\n"
      " -- a U turn movement is allowed in this lane" "\n"
      " maneuverLeftTurnOnRedAllowed (4)," "\n"
      " -- a Stop, and then proceed when safe movement" "\n"
      " -- is allowed in this lane" "\n"
      " maneuverRightTurnOnRedAllowed (5)," "\n"
      " -- a Stop, and then proceed when safe movement" "\n"
      " -- is allowed in this lane" "\n"
      " maneuverLaneChangeAllowed(6)," "\n"
      " -- a movement which changes to an outer lane" "\n"
      " -- on the egress side is allowed in this lane" "\n"
      " -- (example: left into either outbound lane)" "\n"
      " maneuverNoStoppingAllowed(7)," "\n"
      " -- the vehicle should not stop at the stop line" "\n"
      " -- (example: a flashing green arrow)" "\n"
      " yieldAllwaysRequired(8)," "\n"
      " -- the allowed movements above are not protected" "\n"
      " -- (example: an permanent yellow condition)" "\n"
      " goWithHalt(9)," "\n"
      " -- after making a full stop, may proceed" "\n"
      " caution(10)," "\n"
      " -- proceed past stop line with caution" "\n"
      " reserved1(11)" "\n"
      " -- used to align to 12 Bit Field" "\n"
      " } (SIZE(12))")
    struct AllowedManeuvers {
      uint16 allowed_maneuvers;
    };
  };
};
