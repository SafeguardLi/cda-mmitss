// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/MovementEvent.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/AdvisorySpeed.idl"
#include "carma_v2x_msgs/msg/TimeChangeDetails.idl"
#include "j2735_v2x_msgs/msg/MovementPhaseState.idl"

module carma_v2x_msgs {
  module msg {
    @verbatim (language="comment", text=
      " MovementEvent.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @author Mae Fromm" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " The MovementEvent data frame contains details about a single movement. It is used by the movement state to" "\n"
      " convey one of number of movements (typically occurring over a sequence of times) for a SignalGroupID." "\n"
      "" "\n"
      " MovementEvent ::= SEQUENCE {" "\n"
      " eventState MovementPhaseState," "\n"
      " -- Consisting of:" "\n"
      " -- Phase state (the basic 11 states)" "\n"
      " -- Directional, protected, or permissive state" "\n"
      " timing TimeChangeDetails OPTIONAL," "\n"
      " -- Timing Data in UTC time stamps for event" "\n"
      " -- includes start and min/max end times of phase" "\n"
      " -- confidence and estimated next occurrence" "\n"
      " speeds AdvisorySpeedList OPTIONAL," "\n"
      " -- various speed advisories for use by" "\n"
      " -- general and specific types of vehicles" "\n"
      " -- supporting green-wave and other flow needs" "\n"
      " -- See Section 11 for converting and translating" "\n"
      " -- speed expressed in mph into units of m/s" "\n"
      " regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-MovementEvent}} OPTIONAL," "\n"
      " ..." "\n"
      " }")
    struct MovementEvent {
      j2735_v2x_msgs::msg::MovementPhaseState event_state;

      carma_v2x_msgs::msg::TimeChangeDetails timing;

      boolean timing_exists;

      @verbatim (language="comment", text=
        " The AdvisorySpeedList data frame consists of a list of AdvisorySpeed entries." "\n"
        "" "\n"
        " AdvisorySpeedList ::= SEQUENCE (SIZE(1..16)) OF AdvisorySpeed")
      sequence<carma_v2x_msgs::msg::AdvisorySpeed> advisory_speed_list;

      boolean speeds_exists;
    };
  };
};
