// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/DetectedObjectData.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/DetectedObjectCommonData.idl"
#include "carma_v2x_msgs/msg/DetectedObjectOptionalData.idl"

module carma_v2x_msgs {
  module msg {
    module DetectedObjectData_Constants {
      const uint8 HAS_DETECTED_OBJECT_OPTIONAL_DATA = 1;
    };
    @verbatim (language="comment", text=
      " DetectedObjectData.msg" "\n"
      "" "\n"
      " Modified J3224 2020 message format, adjusted to use base SI units (m,s, etc) in most case." "\n"
      "" "\n"
      " Parsed description of DetectedObjectData from the SAE J3224 2020 specification." "\n"
      " For further usage details consult the specification. See note on SI units above.")
    struct DetectedObjectData {
      @verbatim (language="comment", text=
        " DetectedObjectData::= SEQUENCE {" "\n"
        "   detObjCommon DetectedObjectCommonData," "\n"
        "   -- Common data for detected object" "\n"
        "   detObjOptData DetectedObjectOptionalData OPTIONAL" "\n"
        "   -- Type specific optional data" "\n"
        " }")
      carma_v2x_msgs::msg::DetectedObjectCommonData detected_object_common_data;

      @verbatim (language="comment", text=
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_DETECTED_OBJECT_OPTIONAL_DATA) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_DETECTED_OBJECT_OPTIONAL_DATA")
      uint8 presence_vector;

      carma_v2x_msgs::msg::DetectedObjectOptionalData detected_object_optional_data;
    };
  };
};
