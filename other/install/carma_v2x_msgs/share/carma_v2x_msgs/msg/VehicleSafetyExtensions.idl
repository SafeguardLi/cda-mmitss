// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/VehicleSafetyExtensions.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/PathHistory.idl"
#include "carma_v2x_msgs/msg/PathPrediction.idl"
#include "j2735_v2x_msgs/msg/ExteriorLights.idl"
#include "j2735_v2x_msgs/msg/VehicleEventFlags.idl"

module carma_v2x_msgs {
  module msg {
    module VehicleSafetyExtensions_Constants {
      const uint16 HAS_EVENTS = 1;
      const uint16 HAS_PATH_HISTORY = 2;
      const uint16 HAS_PATH_PREDICTION = 4;
      const uint16 HAS_LIGHTS = 8;
    };
    @verbatim (language="comment", text=
      " VehicleSafetyExtensions.msg" "\n"
      "" "\n"
      " Modified J2735 2016 message format, adjusted to use base SI units (m,s, etc) in most case.")
    struct VehicleSafetyExtensions {
      @verbatim (language="comment", text=
        " VehicleSafetyExtensions ::= SEQUENCE {" "\n"
        "    events             VehicleEventFlags OPTIONAL," "\n"
        "    pathHistory        PathHistory       OPTIONAL," "\n"
        "    pathPrediction     PathPrediction    OPTIONAL," "\n"
        "    lights             ExteriorLights    OPTIONAL," "\n"
        "    ..." "\n"
        "    }" "\n"
        " A BIT STRING defining the presence of optional feilds." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_EVENTS) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_EVENTS")
      uint16 presence_vector;

      j2735_v2x_msgs::msg::VehicleEventFlags events;

      carma_v2x_msgs::msg::PathHistory path_history;

      carma_v2x_msgs::msg::PathPrediction path_prediction;

      j2735_v2x_msgs::msg::ExteriorLights lights;
    };
  };
};
