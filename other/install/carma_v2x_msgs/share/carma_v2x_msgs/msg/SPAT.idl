// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/SPAT.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/IntersectionState.idl"

module carma_v2x_msgs {
  module msg {
    @verbatim (language="comment", text=
      " SPAT.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @author Mae Fromm" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " A complete description of an intersection's roadway geometry and its allowed navigational paths" "\n"
      " (independent of any additional regulatory restrictions that may apply over time or from user classification).")
    struct SPAT {
      @verbatim (language="comment", text=
        " The SPAT message sends the current movement state of each active phase in the system as needed (such as values of" "\n"
        " what states are active and values at what time a state has begun/does begin earliest, is expected to begin most likely and" "\n"
        " will end latest). The state of inactive movements is not normally transmitted. Movements are mapped to specific" "\n"
        " approaches and connections of ingress to egress lanes and by use of the SignalGroupID in the MapData message" "\n"
        " SPAT ::= SEQUENCE {" "\n"
        "  timeStamp MinuteOfTheYear OPTIONAL," "\n"
        "  name DescriptiveName OPTIONAL," "\n"
        "  -- human readable name for this collection" "\n"
        "  -- to be used only in debug mode" "\n"
        "  intersections IntersectionStateList," "\n"
        "  -- sets of SPAT data (one per intersection)" "\n"
        "" "\n"
        "  -- If PrioritizationResponse data is required, it is found" "\n"
        "  -- in the RegionalSPAT entry below" "\n"
        "" "\n"
        "  regional SEQUENCE (SIZE(1..4)) OF RegionalExtension {{REGION.Reg-SPAT}} OPTIONAL," "\n"
        "  ..." "\n"
        " }" "\n"
        "MinuteOfTheYear OPTIONAL ::= INTEGER (0..527040)" "\n"
        " -- The value 527040 shall be used for invalid")
      uint32 time_stamp;

      boolean time_stamp_exists;

      @verbatim (language="comment", text=
        " name DescriptiveName OPTIONAL := IA5String (SIZE(1..63))" "\n"
        " -- often for debug use only" "\n"
        " -- but at times used to name ped crossings")
      string name;

      boolean name_exists;

      @verbatim (language="comment", text=
        " IntersectionStateList ::= SEQUENCE (SIZE(1..32)) OF IntersectionState")
      sequence<carma_v2x_msgs::msg::IntersectionState> intersection_state_list;
    };
  };
};
