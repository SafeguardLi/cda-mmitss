// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/TrailerUnitDescription.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/BumperHeights.idl"
#include "carma_v2x_msgs/msg/NodeXY24b.idl"
#include "carma_v2x_msgs/msg/OffsetB12.idl"
#include "carma_v2x_msgs/msg/PivotPointDescription.idl"
#include "carma_v2x_msgs/msg/TrailerHistoryPointList.idl"
#include "carma_v2x_msgs/msg/TrailerMass.idl"
#include "carma_v2x_msgs/msg/VehicleHeight.idl"
#include "carma_v2x_msgs/msg/VehicleLength.idl"
#include "carma_v2x_msgs/msg/VehicleWidth.idl"
#include "carma_v2x_msgs/msg/VertOffsetB07.idl"
#include "j2735_v2x_msgs/msg/IsDolly.idl"

module carma_v2x_msgs {
  module msg {
    module TrailerUnitDescription_Constants {
      const uint32 HAS_HEIGHT = 1;
      const uint32 HAS_MASS = 2;
      const uint32 HAS_BUMPER_HEIGHTS = 4;
      const uint32 HAS_CENTER_OF_GRAVITY = 8;
      const uint32 HAS_REAR_PIVOT = 16;
      const uint32 HAS_REAR_WHEEL_OFFSET = 32;
      const uint32 HAS_ELEVATION_OFFSET = 64;
      const uint32 HAS_CRUMB_DATA = 128;
    };
    @verbatim (language="comment", text=
      " TrailerUnitDescription.msg" "\n"
      "" "\n"
      " Modified J2735 2016 message format, adjusted to use base SI units (m,s, etc) in most case.")
    struct TrailerUnitDescription {
      @verbatim (language="comment", text=
        " TrailerUnitDescription ::= SEQUENCE {" "\n"
        "    isDolly          IsDolly, -- if false this is a trailer" "\n"
        "    width            VehicleWidth," "\n"
        "    length           VehicleLength," "\n"
        "    height           VehicleHeight OPTIONAL," "\n"
        "    mass             TrailerMass   OPTIONAL," "\n"
        "    bumperHeights    BumperHeights OPTIONAL," "\n"
        "    centerOfGravity  VehicleHeight OPTIONAL," "\n"
        "    -- The front pivot point of the unit" "\n"
        "    frontPivot       PivotPointDescription," "\n"
        "    -- The rear pivot point connecting to the next element," "\n"
        "    -- if present and used (implies another unit is connected)" "\n"
        "    rearPivot        PivotPointDescription OPTIONAL," "\n"
        "    -- Rear wheel pivot point center-line offset" "\n"
        "    -- measured from the rear of the above length" "\n"
        "    rearWheelOffset  Offset-B12 OPTIONAL," "\n"
        "                     -- the effective center-line of the wheel set" "\n"
        "    -- Current Position relative to the hauling Vehicle" "\n"
        "    positionOffset   Node-XY-24b," "\n"
        "    elevationOffset  VertOffset-B07 OPTIONAL," "\n"
        "    -- Past Position history relative to the hauling Vehicle" "\n"
        "    crumbData       TrailerHistoryPointList OPTIONAL," "\n"
        "    ..." "\n"
        "    }" "\n"
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_HEIGHT) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_HEIGHT")
      uint32 presence_vector;

      j2735_v2x_msgs::msg::IsDolly is_dolly;

      carma_v2x_msgs::msg::VehicleWidth width;

      carma_v2x_msgs::msg::VehicleLength length;

      carma_v2x_msgs::msg::VehicleHeight height;

      carma_v2x_msgs::msg::TrailerMass mass;

      carma_v2x_msgs::msg::BumperHeights bumper_heights;

      carma_v2x_msgs::msg::VehicleHeight center_of_gravity;

      carma_v2x_msgs::msg::PivotPointDescription front_pivot;

      carma_v2x_msgs::msg::PivotPointDescription rear_pivot;

      carma_v2x_msgs::msg::OffsetB12 rear_wheel_offset;

      carma_v2x_msgs::msg::NodeXY24b position_offset;

      carma_v2x_msgs::msg::VertOffsetB07 elevation_offset;

      carma_v2x_msgs::msg::TrailerHistoryPointList crumb_data;
    };
  };
};
