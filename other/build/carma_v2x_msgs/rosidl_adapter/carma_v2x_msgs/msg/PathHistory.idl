// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/PathHistory.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/FullPositionVector.idl"
#include "carma_v2x_msgs/msg/PathHistoryPointList.idl"
#include "j2735_v2x_msgs/msg/GNSSStatus.idl"

module carma_v2x_msgs {
  module msg {
    module PathHistory_Constants {
      const uint8 HAS_CURR_GNSS_STATUS = 1;
      const uint8 HAS_INITIAL_POSITION = 2;
    };
    @verbatim (language="comment", text=
      " PathHistory.msg" "\n"
      "" "\n"
      " Modified J2735 2016 message format, adjusted to use base SI units (m,s, etc) in most case." "\n"
      "" "\n"
      " Parsed description of PathHistory from the SAE J2735 2016 specification." "\n"
      " For further usage details consult the specification. See note on SI units above.")
    struct PathHistory {
      @verbatim (language="comment", text=
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_CURR_GNSS_STATUS) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_CURR_GNSS_STATUS")
      uint8 presence_vector;

      carma_v2x_msgs::msg::PathHistoryPointList crumb_data;

      @verbatim (language="comment", text=
        "###" "\n"
        " OPTIONAL FIELDS" "\n"
        " All fields below this section are optional." "\n"
        " The presence of a given field can be idenfied by checking the precense_vector" "\n"
        "###")
      carma_v2x_msgs::msg::FullPositionVector initial_position;

      j2735_v2x_msgs::msg::GNSSStatus curr_gnss_status;
    };
  };
};
