// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/ObstacleSize.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/SizeValue.idl"

module carma_v2x_msgs {
  module msg {
    module ObstacleSize_Constants {
      const uint8 HAS_HEIGHT = 1;
    };
    @verbatim (language="comment", text=
      " ObstacleSize.msg" "\n"
      "" "\n"
      " Modified J3224 2020 message format, adjusted to use base SI units (m,s, etc) in most case." "\n"
      "" "\n"
      " Parsed description of ObstacleSize from the SAE J3224 2020 specification." "\n"
      " For further usage details consult the specification. See note on SI units above.")
    struct ObstacleSize {
      @verbatim (language="comment", text=
        " ObstacleSize ::= SEQUENCE {" "\n"
        "   width SizeValue," "\n"
        "   length SizeValue," "\n"
        "   height SizeValue OPTIONAL" "\n"
        " }")
      carma_v2x_msgs::msg::SizeValue width;

      carma_v2x_msgs::msg::SizeValue length;

      @verbatim (language="comment", text=
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_HEIGHT) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_HEIGHT")
      uint8 presence_vector;

      carma_v2x_msgs::msg::SizeValue height;
    };
  };
};
