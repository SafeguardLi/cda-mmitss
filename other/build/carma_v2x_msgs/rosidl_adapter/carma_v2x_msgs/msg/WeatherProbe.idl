// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_v2x_msgs/msg/WeatherProbe.msg
// generated code does not contain a copyright notice

#include "carma_v2x_msgs/msg/AmbientAirPressure.idl"
#include "carma_v2x_msgs/msg/AmbientAirTemperature.idl"
#include "carma_v2x_msgs/msg/WiperSet.idl"

module carma_v2x_msgs {
  module msg {
    module WeatherProbe_Constants {
      const uint32 HAS_AIR_TEMP = 1;
      const uint16 HAS_AIR_PRESSURE = 2;
      const uint16 HAS_RAIN_RATES = 4;
    };
    @verbatim (language="comment", text=
      " WeatherProbe.msg" "\n"
      "" "\n"
      " Modified J2735 2016 message format, adjusted to use base SI units (m,s, etc) in most case.")
    struct WeatherProbe {
      @verbatim (language="comment", text=
        " WeatherProbe ::= SEQUENCE {" "\n"
        "    airTemp      AmbientAirTemperature  OPTIONAL," "\n"
        "    airPressure  AmbientAirPressure     OPTIONAL," "\n"
        "    rainRates    WiperSet               OPTIONAL," "\n"
        "    ..." "\n"
        "    }" "\n"
        " A BIT STRING defining the presence of optional feilds." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_AIR_TEMP) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_AIR_TEMP")
      uint32 presence_vector;

      carma_v2x_msgs::msg::AmbientAirTemperature air_temp;

      carma_v2x_msgs::msg::AmbientAirPressure air_pressure;

      carma_v2x_msgs::msg::WiperSet rain_rates;
    };
  };
};
