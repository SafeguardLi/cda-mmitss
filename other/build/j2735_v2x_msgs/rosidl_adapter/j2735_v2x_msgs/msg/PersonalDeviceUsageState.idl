// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/PersonalDeviceUsageState.msg
// generated code does not contain a copyright notice


module j2735_v2x_msgs {
  module msg {
    module PersonalDeviceUsageState_Constants {
      const uint16 UNAVAILABLE = 0;
      const uint16 OTHER = 1;
      const uint16 IDLE = 2;
      const uint16 LISTENING_TO_AUDIO = 4;
      const uint16 TYPING = 8;
      const uint16 CALLING = 16;
      const uint16 PLAYING_GAMES = 32;
      const uint16 READING = 64;
      const uint16 VIEWING = 128;
    };
    @verbatim (language="comment", text=
      " PersonalDeviceUsageState.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " Parsed description of PersonalDeviceUsageState from the SAE J2735 2016 specification." "\n"
      " For further usage details consult the specification." "\n"
      "" "\n"
      " PersonalDeviceUsageState ::= BIT STRING {" "\n"
      "    unavailable      (0), -- Not specified" "\n"
      "    other            (1), -- Used for states not defined below" "\n"
      "    idle             (2), -- Human is not interacting with device" "\n"
      "    listeningToAudio (3), -- Any audio source other then calling" "\n"
      "    typing           (4), -- Including texting, entering addresses" "\n"
      "                          -- and other manual input activity" "\n"
      "    calling          (5)," "\n"
      "    playingGames     (6)," "\n"
      "    reading          (7)," "\n"
      "    viewing          (8)  -- Watching dynamic content, including following" "\n"
      "                          -- navigation prompts, viewing videos or other" "\n"
      "                          -- visual contents that are not static" "\n"
      "    } (SIZE (9, ...))" "\n"
      "    -- All bits shall be set to zero when unknown state")
    struct PersonalDeviceUsageState {
      @verbatim (language="comment", text=
        " A BIT STRING defining the presence of optional flags." "\n"
        " Compare with bitwise-and" "\n"
        " if (states & IDLE) etc." "\n"
        " Create with bitwise-or" "\n"
        " states = states | IDLE")
      uint16 states;
    };
  };
};
