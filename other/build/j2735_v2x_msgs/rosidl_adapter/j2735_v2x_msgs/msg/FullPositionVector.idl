// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/FullPositionVector.msg
// generated code does not contain a copyright notice

#include "j2735_v2x_msgs/msg/DDateTime.idl"
#include "j2735_v2x_msgs/msg/Elevation.idl"
#include "j2735_v2x_msgs/msg/Heading.idl"
#include "j2735_v2x_msgs/msg/Latitude.idl"
#include "j2735_v2x_msgs/msg/Longitude.idl"
#include "j2735_v2x_msgs/msg/PositionConfidenceSet.idl"
#include "j2735_v2x_msgs/msg/PositionalAccuracy.idl"
#include "j2735_v2x_msgs/msg/SpeedandHeadingandThrottleConfidence.idl"
#include "j2735_v2x_msgs/msg/TimeConfidence.idl"
#include "j2735_v2x_msgs/msg/TransmissionAndSpeed.idl"

module j2735_v2x_msgs {
  module msg {
    module FullPositionVector_Constants {
      const uint16 HAS_UTC_TIME = 1;
      const uint16 HAS_ELEVATION = 2;
      const uint16 HAS_HEADING = 4;
      const uint16 HAS_SPEED = 8;
      const uint16 HAS_POS_ACCURACY = 16;
      const uint16 HAS_TIME_CONFIDENCE = 32;
      const uint16 HAS_POS_CONFIDENCE = 64;
      const uint16 HAS_SPEED_CONFIDENCE = 128;
    };
    @verbatim (language="comment", text=
      " FullPositionVector.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " Parsed description of FullPositionVector from the SAE J2735 2016 specification." "\n"
      " For further usage details consult the specification." "\n"
      "" "\n"
      " FullPositionVector ::= SEQUENCE {" "\n"
      "    utcTime             DDateTime OPTIONAL,   -- time with mSec precision" "\n"
      "    long                Longitude,            -- 1/10th microdegree" "\n"
      "    lat                 Latitude,             -- 1/10th microdegree" "\n"
      "    elevation           Elevation  OPTIONAL,  -- units of 0.1 m" "\n"
      "    heading             Heading OPTIONAL," "\n"
      "    speed               TransmissionAndSpeed OPTIONAL," "\n"
      "    posAccuracy         PositionalAccuracy OPTIONAL," "\n"
      "    timeConfidence      TimeConfidence OPTIONAL," "\n"
      "    posConfidence       PositionConfidenceSet OPTIONAL," "\n"
      "    speedConfidence     SpeedandHeadingandThrottleConfidence OPTIONAL," "\n"
      "    ..." "\n"
      "    }")
    struct FullPositionVector {
      @verbatim (language="comment", text=
        " A BIT STRING defining the presence of optional fields." "\n"
        " Compare with bitwise-and" "\n"
        " if (presence_vector & HAS_HEADING) etc." "\n"
        " Create with bitwise-or" "\n"
        " presence_vector = presence_vector | HAS_HEADING")
      uint16 presence_vector;

      j2735_v2x_msgs::msg::DDateTime utc_time;

      j2735_v2x_msgs::msg::Longitude lon;

      j2735_v2x_msgs::msg::Latitude lat;

      j2735_v2x_msgs::msg::Elevation elevation;

      j2735_v2x_msgs::msg::Heading heading;

      j2735_v2x_msgs::msg::TransmissionAndSpeed speed;

      j2735_v2x_msgs::msg::PositionalAccuracy pos_accuracy;

      j2735_v2x_msgs::msg::TimeConfidence time_confidence;

      j2735_v2x_msgs::msg::PositionConfidenceSet pos_confidence;

      j2735_v2x_msgs::msg::SpeedandHeadingandThrottleConfidence speed_confidence;
    };
  };
};
