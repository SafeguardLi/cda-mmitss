// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/TrafficControlDetail.msg
// generated code does not contain a copyright notice


module j2735_v2x_msgs {
  module msg {
    typedef uint8 uint8__2[2];
    module TrafficControlDetail_Constants {
      const uint8 SIGNAL_CHOICE = 0;
      const uint8 STOP_CHOICE = 1;
      const uint8 YIELD_CHOICE = 2;
      const uint8 NOTOWING_CHOICE = 3;
      const uint8 RESTRICTED_CHOICE = 4;
      const uint8 CLOSED_CHOICE = 5;
      const uint8 CHAINS_CHOICE = 6;
      const uint8 DIRECTION_CHOICE = 7;
      const uint8 LATAFFINITY_CHOICE = 8;
      const uint8 LATPERM_CHOICE = 9;
      const uint8 PARKING_CHOICE = 10;
      const uint8 MINSPEED_CHOICE = 11;
      const uint8 MAXSPEED_CHOICE = 12;
      const uint8 MINHDWY_CHOICE = 13;
      const uint8 MAXVEHMASS_CHOICE = 14;
      const uint8 MAXVEHHEIGHT_CHOICE = 15;
      const uint8 MAXVEHWIDTH_CHOICE = 16;
      const uint8 MAXVEHLENGTH_CHOICE = 17;
      const uint8 MAXVEHAXLES_CHOICE = 18;
      const uint8 MINVEHOCC_CHOICE = 19;
      const uint8 MAXPLATOONSIZE_CHOICE = 20;
      const uint8 MINPLATOONHDWY_CHOICE = 21;
      const uint8 OPEN = 0;
      const uint8 CLOSED = 1;
      const uint8 TAPERLEFT = 2;
      const uint8 TAPERRIGHT = 3;
      const uint8 OPENLEFT = 4;
      const uint8 OPENRIGHT = 5;
      const uint8 NO = 0;
      const uint8 PERMITTED = 1;
      const uint8 REQUIRED = 2;
      const uint8 FORWARD = 0;
      const uint8 REVERSE = 1;
      const uint8 LEFT = 0;
      const uint8 RIGHT = 1;
      const uint8 NONE = 0;
      const uint8 PASSINGONLY = 2;
      const uint8 EMERGENCYONLY = 3;
      const uint8 PARALLEL = 1;
      const uint8 ANGLED = 2;
    };
    @verbatim (language="comment", text=
      " TrafficControlDetail.msg" "\n"
      "" "\n"
      " Part of the CARMA Cloud geo-fence specification not part of the official SAE j2735 standard" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " Description" "\n"
      " ...")
    struct TrafficControlDetail {
      @verbatim (language="comment", text=
        "TrafficControlDetail ::= CHOICE" "\n"
        "{" "\n"
        " signal OCTET STRING SIZE(0..63)," "\n"
        " stop NULL," "\n"
        " yield NULL," "\n"
        " notowing NULL," "\n"
        " restricted NULL," "\n"
        " closed ENUMERATED {open, closed, taperleft, taperright, openleft, openright}," "\n"
        " chains ENUMERATED {no, permitted, required}," "\n"
        " direction ENUMERATED {forward, reverse}," "\n"
        " lataffinity ENUMERATED {left, right}," "\n"
        " latperm SEQUENCE (SIZE(2)) OF ENUMERATED {none, permitted, passing-only, emergency-only}," "\n"
        " parking ENUMERATED {no, parallel, angled}," "\n"
        " minspeed INTEGER (0..1023), -- tenths of m/s" "\n"
        " maxspeed INTEGER (0..1023), -- tenths of m/s" "\n"
        " minhdwy INTEGER (0..2047), -- tenths of meters" "\n"
        " maxvehmass INTEGER (0..65535), -- kg" "\n"
        " maxvehheight INTEGER (0..127), -- tenths of meters" "\n"
        " maxvehwidth INTEGER (0..127), -- tenths of meters" "\n"
        " maxvehlength INTEGER (0..1023), -- tenths of meters" "\n"
        " maxvehaxles INTEGER (2..15), -- number of axles" "\n"
        " minvehocc INTEGER (1..15), -- vehicle passenger count" "\n"
        "   maxplatoonsize INTEGER (1..63), -- vehicle count" "\n"
        "   minplatoonhdwy INTEGER (0..2047), -- tenths of meters" "\n"
        " ..." "\n"
        "}")
      uint8 choice;

      @verbatim (language="comment", text=
        " signal ::= OCTET STRING SIZE(0..63)")
      sequence<uint8> signal;

      @verbatim (language="comment", text=
        "closed ENUMERATED {open, closed, taperleft, taperright, openleft, openright}")
      uint8 closed;

      @verbatim (language="comment", text=
        "chains ENUMERATED {no, permitted, required}")
      uint8 chains;

      @verbatim (language="comment", text=
        "direction ENUMERATED {forward, reverse}")
      uint8 direction;

      @verbatim (language="comment", text=
        "lataffinity ENUMERATED {left, right}")
      uint8 lataffinity;

      @verbatim (language="comment", text=
        "latperm SEQUENCE (SIZE(2)) OF ENUMERATED {none, permitted, passing-only, emergency-only}")
      uint8__2 latperm;

      @verbatim (language="comment", text=
        "parking ENUMERATED {no, parallel, angled}")
      uint8 parking;

      @verbatim (language="comment", text=
        "minspeed ::= INTEGER (0..1023), -- tenths of m/s")
      uint16 minspeed;

      @verbatim (language="comment", text=
        "maxspeed ::= INTEGER (0..1023), -- tenths of m/s")
      uint16 maxspeed;

      @verbatim (language="comment", text=
        "minhdwy ::= INTEGER (0..2047), -- tenths of meters")
      uint16 minhdwy;

      @verbatim (language="comment", text=
        "maxvehmass ::= INTEGER (0..65535), -- kg")
      uint16 maxvehmass;

      @verbatim (language="comment", text=
        "maxvehheight ::= INTEGER (0..127), -- tenths of meters")
      uint8 maxvehheight;

      @verbatim (language="comment", text=
        "maxvehwidth ::= INTEGER (0..127), -- tenths of meters")
      uint8 maxvehwidth;

      @verbatim (language="comment", text=
        "maxvehlength ::= INTEGER (0..1023), -- tenths of meters")
      uint16 maxvehlength;

      @verbatim (language="comment", text=
        "maxvehaxles ::= INTEGER (2..15), -- number of axles")
      uint8 maxvehaxles;

      @verbatim (language="comment", text=
        "minvehocc ::= INTEGER (1..15), -- vehicle passenger count")
      uint8 minvehocc;

      @verbatim (language="comment", text=
        "maxplatoonsize ::= INTEGER (1..63), -- vehicle count")
      uint8 maxplatoonsize;

      @verbatim (language="comment", text=
        "minplatoonhdwy ::= INTEGER (0..2047), -- tenths of meters")
      uint16 minplatoonhdwy;
    };
  };
};
