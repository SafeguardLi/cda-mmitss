// generated from rosidl_adapter/resource/msg.idl.em
// with input from j2735_v2x_msgs/msg/NodeListXY.msg
// generated code does not contain a copyright notice

#include "j2735_v2x_msgs/msg/ComputedLane.idl"
#include "j2735_v2x_msgs/msg/NodeSetXY.idl"

module j2735_v2x_msgs {
  module msg {
    module NodeListXY_Constants {
      const uint8 NODE_SET_XY = 0;
      const uint8 COMPUTED_LANE = 1;
    };
    @verbatim (language="comment", text=
      " NodeListXY.msg" "\n"
      "" "\n"
      " J2735 2016 message format." "\n"
      "" "\n"
      " @author Mae Fromm" "\n"
      " @version 0.1" "\n"
      "" "\n"
      " The NodeListXY data structure provides the sequence of signed offset node point values for determining the Xs and" "\n"
      " Ys (and possibly Width or Zs when present), using the then current Position3D object to build a path for the centerline of" "\n"
      " the subject lane type. Each X,Y point is referred to as a Node Point. The straight line paths between these points are" "\n"
      " referred to as Segments." "\n"
      "" "\n"
      " NodeListXY ::= CHOICE {" "\n"
      " nodes NodeSetXY," "\n"
      " -- a lane made up of two or more" "\n"
      " -- XY node points and any attributes" "\n"
      " -- defined in those nodes" "\n"
      " computed ComputedLane," "\n"
      " -- a lane path computed by translating" "\n"
      " -- the data defined by another lane" "\n"
      " ..." "\n"
      " }")
    struct NodeListXY {
      uint8 choice;

      j2735_v2x_msgs::msg::NodeSetXY nodes;

      j2735_v2x_msgs::msg::ComputedLane computed;
    };
  };
};
