// generated from rosidl_adapter/resource/msg.idl.em
// with input from carma_driver_msgs/msg/DriverStatus.msg
// generated code does not contain a copyright notice


module carma_driver_msgs {
  module msg {
    module DriverStatus_Constants {
      const uint8 OFF = 0;
      const uint8 OPERATIONAL = 1;
      const uint8 DEGRADED = 2;
      const uint8 FAULT = 3;
    };
    @verbatim (language="comment", text=
      " DriverStatus.msg" "\n"
      "" "\n"
      " Announces the status and category of software driver publishing this message." "\n"
      " Some drivers may cover multiple categories because the hardware they" "\n"
      " represent has multiple capabilities.")
    struct DriverStatus {
      @verbatim (language="comment", text=
        " driver_name is the ROS name of the driver node")
      string name;

      @verbatim (language="comment", text=
        " status indicates the operational state of the underlying hardware device," "\n"
        " and is an enumerated value.")
      uint8 status;

      @verbatim (language="comment", text=
        "     <other values reserved for future expansion>" "\n"
        " These are the possible categories - at least one must be true")
      boolean can;

      boolean radar;

      boolean gnss;

      boolean lidar;

      boolean roadway_sensor;

      boolean comms;

      boolean controller;

      boolean camera;

      boolean imu;

      boolean trailer_angle_sensor;

      boolean lightbar;
    };
  };
};
